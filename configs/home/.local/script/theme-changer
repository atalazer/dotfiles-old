#!/usr/bin/env bash
# vim: ft=sh ts=4 sw=4:

# User Configuration
RESTART_WM=${RESTART_WM:-"true"}
WM=${WM:-"awesome"}

WALLPAPER_CHANGER=${WALLPAPER_CHANGER:-"feh --bg-fill "}

# Config FIles
GTK2_CONFIG="${GTK2_RC_FILES:-$HOME/.gtkrc-2.0}"
GTK3_CONFIG="${GTK3_RC_FILES:-$HOME/.config/gtk-3.0/settings.ini}"
XSETTINGSD_CONFIG="${XSETTINGSD_FILES:-$HOME/.xsettingsd}"
XRESOURCES_CONFIG="${XRESOURCES_FILES:-$HOME/.Xresources}"

# State File
DIR=${XDG_CACHE_HOME:-$HOME/.cache}/theme
FILE=$DIR/default.conf

# Colors
WHITE="\e[97m"
RED="\e[31m"
YELLOW="\e[33m"
BLUE="\e[34m"
END="\e[0m"

# pt = print text (With color!)
pt() {
    OPT=${1:-normal}
    MSG=${2:-"A Message"}
    case $OPT in
    normal | nor)
        echo -e "${WHITE}${MSG}${END}"
        ;;
    warning | warn)
        echo -e "${YELLOW}${MSG}${END}"
        ;;
    error | err)
        echo -e "${RED}${MSG}${END}"
        ;;
    info)
        echo -e "${BLUE}${MSG}${END}"
        ;;
    esac
}

if [ ! -d "$DIR" ]; then
    mkdir -p "$DIR"
fi
if [ ! -f "$FILE" ]; then
    touch "$FILE" &&
        printf "%s" "\
WAL_IS_DARK=false
GTK_THEME=Adwaita
ICON_THEME=Papirus
CURSOR_THEME=Adwaita
WAL_THEME=tokyonight
WALLPAPER_THEME=
" > "$FILE"
fi

AFTER() {
    # Check if app is running
    check_app() {
        pgrep -u "$USER" -x "$1" > /dev/null 2>&1
    }

    # Reload Kitty
    check_app kitty &&
        pt info "Reloading Kitty" &&
        kitty @ set-colors --all --configured ~/.config/kitty/kitty.conf > /dev/null 2>&1

    # Reload WM
    if [ "$RESTART_WM" = true ]; then
        pt info "Restarting WM"
        if [ "$WM" = "awesome" ]; then
            check_app awesome &&
                awesome-client 'awesome.restart()' > /dev/null 2>&1
        fi
    fi

    check_app polybar && [ -f ~/.config/polybar/scripts/pywal.sh ] && ~/.config/polybar/scripts/pywal.sh
}

# ============================================================
usage() {
    printf "%s" "\
Usage $(basename "$0"):
    -h, --help           Show this help message and exit
    -e, --edit           Edit Config
    -l, --list           List All Available Themes and Icons
    -a, --apply          Apply 1{Themes} 2{Icons} 3{cursor}
    -s, --set            Set GTK, Icon, or Cursor Theme
    -g, --get            Get GTK, Icon, or Cursor Theme
    -L, --light          Turn On Light Mode
    -D, --dark           Turn On Dark Mode
    -t, --toggle         Toggle Dark and Light Mode
"
exit 0
}

LIST() {
    LS_CMD="/usr/bin/ls"
    INFO="pt err"

    INFO() {
        echo ""

        MSG="$*"
        $INFO "${MSG}"
    }
    show_list() {
        DIR=$1
        if ! test -d "$DIR"; then
            return
        fi
        if /usr/bin/ls -1qA "$DIR" | grep -q .; then
            pt warn "From $DIR" &&
                $LS_CMD "$DIR"
           echo ""
        fi
    }

    # Show All Themes
    INFO "Themes:"
    show_list ~/.themes
    show_list ~/.local/share/themes
    show_list /usr/share/themes

    # Show All Icons
    INFO "Icons-Pack:"
    show_list ~/.icons
    show_list ~/.local/share/icons
    show_list /usr/share/icons

    # Show Wal Colorscheme
    INFO "Light-Wal-Colorschemes:"
    show_list ~/.config/wal/colorschemes/light

    INFO "Dark-Wal-Colorschemes:"
    show_list ~/.config/wal/colorschemes/dark

}

GET() {
    filter() {
        grep "$1" < "$FILE" | cut -c "${2:-13}"-100 | head -n 1
    }
    while [ -n "$1" ]; do
        case "$1" in
            "-f") shift; FILE=$1 ;;
            "-l") FILE=$DIR/light.conf ;;
            "-d") FILE=$DIR/dark.conf ;;
            all)
                if command -v "bat" >/dev/null 2>&1; then
                    bat --paging=never "$FILE"
                else
                    cat "$FILE"
                fi
                ;;
            gtk) filter GTK_THEME 11 ;;
            icon) filter ICON_THEME 12 ;;
            cursor) filter CURSOR_THEME 14 ;;
            wal) filter WAL_THEME 11 ;;
            wallpaper) filter WALLPAPER 11 ;;
            is_dark) filter WAL_IS_DARK 13 ;;
            *) pt error "$1 is Invalid" && exit 1 ;;
        esac
        shift
    done
}

SET() {
    GTK_THEME="$(GET gtk)"
    ICON_THEME="$(GET icon)"
    WAL_THEME="$(GET wal)"
    CURSOR_THEME="$(GET cursor)"
    WALLPAPER="$(GET wallpaper)"
    WAL_IS_DARK="$(GET is_dark)"

    change() {
        QUERY=$1
        VAL=$2
        sed -i --follow-symlinks 's_'"${QUERY}"'=.*_'"${QUERY}"'='"${VAL}"'_' "$FILE"
    }

    while [ -n "$1" ]; do
        case "$1" in
            "-f") shift; FILE=$1 ;;
            "-l") FILE=$DIR/light.conf ;;
            "-d") FILE=$DIR/dark.conf ;;
            -gtk)
                shift
                THEME="$1"
                change GTK\\_THEME "$THEME" 
                ;;
            -icon)
                shift
                THEME="$1"
                change ICON\\_THEME "$THEME" 
                ;;
            -cursor)
                shift
                THEME="$1"
                change CURSOR\\_THEME "$THEME" 
                ;;
            -wal)
                shift
                THEME="$1"
                change WAL\\_THEME "$THEME" 
                ;;
            -wallpaper)
                shift
                THEME="$1"
                change WALLPAPER "$THEME" 
                ;;
            -dark)
                shift
                OPT="$1"
                case $OPT in
                    true | t | yes | y | 1)
                        VAL=true
                        ;;
                    false | f | no | n | 0)
                        VAL=false
                        ;;
                esac
                change WAL\\_IS\\_DARK "$VAL" 
                ;;
            *) pt error "$1 is Invalid" && exit 1 ;;
        esac
        shift
    done
}

APPLY() {
    GTK_THEME="$(GET gtk)"
    ICON_THEME="$(GET icon)"
    CURSOR_THEME="$(GET cursor)"
    WAL_THEME="$(GET wal)"
    WALLPAPER="$(GET wallpaper)"
    WAL_IS_DARK="$(GET is_dark)"

    while [ -n "$1" ]; do
        case "$1" in
            -gtk)
                shift
                GTK_THEME="$1"
                ;;
            -icon)
                shift
                ICON_THEME="$1"
                ;;
            -cursor)
                shift
                CURSOR_THEME="$1"
                ;;
            -wal)
                shift
                WAL_THEME="$1"
                ;;
            -dark)
                shift
                WAL_IS_DARK="$1"
                ;;
            -wallpaper)
                shift
                WALLPAPER="$1"
                ;;
            *) pt error "$1 is Invalid" && exit 1 ;;
        esac
        shift
    done

    # GTK Theme
    sed -i --follow-symlinks 's_gtk-theme-name=.*_gtk-theme-name="'"$GTK_THEME"'"_' "$GTK2_CONFIG"
    sed -i --follow-symlinks 's_gtk-theme-name=.*_gtk-theme-name='"$GTK_THEME"'_' "$GTK3_CONFIG"
    sed -i --follow-symlinks 's_Net/ThemeName.*_Net/ThemeName "'"$GTK_THEME"'"_' "$XSETTINGSD_CONFIG"

    # Icon Theme
    sed -i --follow-symlinks 's_Net/IconThemeName.*_Net/IconThemeName "'"$ICON_THEME"'"_' "$XSETTINGSD_CONFIG"
    sed -i --follow-symlinks 's_gtk-icon-theme-name=.*_gtk-icon-theme-name="'"$ICON_THEME"'"_' "$GTK2_CONFIG"
    sed -i --follow-symlinks 's_gtk-icon-theme-name=.*_gtk-icon-theme-name='"$ICON_THEME"'_' "$GTK3_CONFIG"

    # Cursor themes
    sed -i --follow-symlinks 's_Xcursor.theme:.*_Xcursor.theme:'"$CURSOR_THEME"'_' "$XRESOURCES_CONFIG"
    sed -i --follow-symlinks 's_gtk-cursor-theme-name=.*_gtk-cursor-theme-name="'"$CURSOR_THEME"'"_' "$GTK2_CONFIG"
    sed -i --follow-symlinks 's_gtk-cursor-theme-name=.*_gtk-cursor-theme-name='"$CURSOR_THEME"'_' "$GTK3_CONFIG"

    pt warn "GTK Theme:     $GTK_THEME"
    pt warn "Icon Theme:    $ICON_THEME"
    pt warn "Cursor Theme:  $CURSOR_THEME"
    pt warn "Wal Theme:     $WAL_THEME"
    pt warn "Use Dark wal:  $WAL_IS_DARK"
    pt warn "Wallpaper:     $WALLPAPER"

    if [ "$WAL_IS_DARK" = true ] && [ -n "$WAL_THEME" ]; then
        wal --theme "$WAL_THEME" > /dev/null 2>&1
    else
        wal -l --theme "$WAL_THEME" > /dev/null 2>&1
    fi
    xrdb -merge "$XRESOURCES_CONFIG" > /dev/null 2>&1

    gsettings set org.gnome.desktop.interface gtk-theme "$GTK_THEME" > /dev/null 2>&1
    gsettings set org.gnome.desktop.wm.preferences theme "$GTK_THEME" > /dev/null 2>&1
    xsettingsd > /dev/null 2>&1 &

    if [ -f "$WALLPAPER" ]; then
        $WALLPAPER_CHANGER "$WALLPAPER" > /dev/null 2>&1
    fi

    AFTER

    SET -gtk "$GTK_THEME" -icon "$ICON_THEME" -cursor "$CURSOR_THEME" \
        -wal "$WAL_THEME" -wallpaper "$WALLPAPER" -dark "$WAL_IS_DARK" && \
    pt info "Successfully Changed The Theme"
}

LIGHT() {
    pt info "Turn On Light Mode"

    GTK_THEME="$(GET -l gtk)"
    ICON_THEME="$(GET -l icon)"
    CURSOR_THEME="$(GET -l cursor)"
    WAL_THEME="$(GET -l wal)"
    WALLPAPER="$(GET -l wallpaper)"

    SET -gtk "$GTK_THEME" -icon "$ICON_THEME" -cursor "$CURSOR_THEME" \
        -wal "$WAL_THEME" -wallpaper "$WALLPAPER" -dark false && \
    APPLY

    echo "LIGHT" >/tmp/.light-or-dark
}

DARK() {
    pt info "Turn On Dark Mode"
    SET -dark true

    GTK_THEME="$(GET -d gtk)"
    ICON_THEME="$(GET -d icon)"
    CURSOR_THEME="$(GET -d cursor)"
    WAL_THEME="$(GET -d wal)"
    WALLPAPER="$(GET -d wallpaper)"

    SET -gtk "$GTK_THEME" -icon "$ICON_THEME" -cursor "$CURSOR_THEME" \
        -wal "$WAL_THEME" -wallpaper "$WALLPAPER" -dark true && \
    APPLY

    echo "DARK" >/tmp/.light-or-dark
}

TOGGLE() {
    if [ "$(date +%H | cut -c 1)" = "0" ]; then
        HOUR=$(date +%H | cut -c 2)
    else
        HOUR=$(date +%H)
    fi

    case $1 in
        auto)
            if [ "$HOUR" -le 13 ] && [ "$HOUR" -ge 8 ]; then
                LIGHT
            else
                DARK
            fi
            ;;
        *)
            if [ "$(cat /tmp/.light-or-dark)" = "DARK" ]; then
                LIGHT
            else
                DARK
            fi
            ;;
    esac
}

case "$1" in
    "-a" | "--apply") shift; APPLY "$@" ;;
    "-s" | "--set") shift; SET "$@" ;;
    "-g" | "--get") shift; GET "$@" ;;
    "-t" | "--toggle") shift; TOGGLE "$@" ;;
    "-L" | "--light") LIGHT ;;
    "-D" | "--dark") DARK ;;
    "-l" | "--list") LIST ;;
    "-e" | "--edit") shift; ${EDITOR:-vim} "$DIR/${1:-default}.conf" ;;
    "-h" | "--help") usage ;;
    *) pt error "$1 is Invalid" && exit 1 ;;
esac
