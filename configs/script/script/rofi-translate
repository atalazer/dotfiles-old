#!/usr/bin/env bash
#vim: ft=sh: sw=2: ts=2:

# File              : dmenu_translate (rofi_translate)
# License           : MIT License
# Author            : M. Nabil Adani <nblid48@gmail.com>
# Last Modified By  : Atalazer <baraboyolali@gmail.com>

DMENU="rofi -dmenu -i -l 5"
ICON="$HOME/.config/awesome/icons/linebit/keyboard.png"
HISTFILE="/tmp/rofi_translate"

if [[ ! -f $HISTFILE ]]; then
    touch $HISTFILE
fi

COUNTRY='''
[
  { "code": "id", "name": "Indonesian" },
  { "code": "en", "name": "English" },
  { "code": "jv", "name": "Javanese" },
  { "code": "ja", "name": "Japanese" },
  { "code": "ar", "name": "Arabic" }
]
'''

translate-text() {
    text="$1"
    if [ -z "$text" ]; then
        exit
    fi
    if [ -z $TARGET ]; then
        name=$(echo "$COUNTRY" | jq -r ".[].name" | $DMENU -p "Target Language"  -mesg "Text: $text" )
        code=$(echo "$COUNTRY" | jq -r ".[] | select(.name == \"$name\") | .code")
    else
        code=$TARGET
    fi
    if [ -n "$code" ]; then
        result=$(trans -b --download-audio-as /tmp/trans.ts :"$code" "$text")
        again=true

        # notify-send -i $ICON "Translate" "Result of '$text' in $name is '$result'"

        echo "$text" >> $HISTFILE
        echo "$result" | xclip

        while $again; do
            menu=$(echo -e "Retry\nCopy To Clipboard\nPlay Audio\nExit" | \
                $DMENU -lines 2 -p "Translate Menu" -mesg "Result: $result" -select "Copy To Clipboard")
            if [[ $menu == "Retry" ]]; then
                text=$(echo "$text" | cut -c 1-20)
                result=$(echo "$result" | cut -c 1-20)
                previous_text="$text -> $result"
                text=$($DMENU -p "Translate" -mesg "Previous: $previous_text" -input $HISTFILE)
                translate-text "$text"
            elif [[ $menu == "Copy To Clipboard" ]]; then
                echo -n "$result" | xclip -selection clipboard
                notify-send -u low -i "$ICON" "Translate" "Result saved to clipboard"
                again=false
            elif [[ $menu == "Play Audio" ]]; then
                mpv /tmp/trans.ts
            else
                again=false
            fi
        done
    fi
}

translate-image() {
    IMG=/tmp/translate-image.png
    TXT=/tmp/translate-ocr

    # Get with `tesseract --list-langs`
    notify-send -t $((1000 * 3)) --app-name=translate "Translate" "Select Region To Scan"
    maim -m 10 -s $IMG || exit 1

    LANG=$(echo -e "ind\neng" | rofi -dmenu -i -l 5 -p "Select Language for Image")

    if [[ -n $LANG ]]; then
        notify-send -t $((1000 * 3)) --app-name=screenshot "Translate" "Parse Image to Text"
        convert $IMG \
            -alpha off \
            $IMG
        # convert $IMG \
        #     -bordercolor White -border 10x10 \
        #     $IMG
        tesseract \
            -l "$LANG" \
            --dpi 300 \
            $IMG \
            $TXT &> /dev/null

        # https://unix.stackexchange.com/questions/587616/how-to-remove-the-empty-lines-in-a-file-in-linux
        # Delete blankline
        sed -i '/^[[:space:]]*$/d' $TXT.txt
        cat $TXT.txt | tr -d '\n'
    fi
}

case "$1" in
"-c" | "--clipboard")
    text=$(xclip -selection clipboard -o | tr --delete '\n')
    translate-text "$text"
    ;;
"-i" | "--input")
    text=$($DMENU -p "Translate" -input $HISTFILE)
    translate-text "$text"
    ;;
"-m" | "--image")
    text=$(translate-image)
    translate-text "$text"
    ;;
"-t"| "--text")
    text=${2:?Text}
    translate-text "$text"
    ;;
*)
    echo "Usage dmenu_translate [options]"
    echo ""
    echo "Available Options:"
    echo "-c  --clipboard   read text from clipboard"
    echo "-i  --input       read text from user input"
    echo ""
    ;;
esac
